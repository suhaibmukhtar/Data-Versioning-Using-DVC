## Step by step what all steps will be performed will be listed here
## flow
1. Create a git repo and clone it in local
2. Create mycode.py, add code to it. (saves a csv file in new "data" folder)
3. Do a git add, commit, push before initializing dvc
4. Pip install dvc
5. Peform "dvc init" (creates, .dvcignore and .dvc)
6. run "mkdir s3" (creates a new directory s3) #will store experiments
#in real-world this s3 will be of AWS, where we will be storing experiments
7. Specifying path for DVC where data and experiments will be stored
it can be local(like directory) or remote (like s3 bucket)
8. run "dvc remote add -d myremote S3" #if s3 is of AWS, then at s3 we specify url of s3
#myremote can be of any name(our choice), myremote in now s3 directory created in local
9. To make dvc track the data foler we use command, any modifications/changes
"dvc add data/"   #means track the data folder and files inside this
10. Above command will display error since "git is also tracking this file" SCM->source code manager
11. So we need to remove the git tracking of data folder and files inside it
12. run "git rm -r --cached data/" #this will remove git tracking of data folder and
You can remove it from Git, then add to DVC.
    To stop tracking from Git:
        git rm -r --cached 'data' #remove everything about data
        git commit -m "stop tracking data" #to save changes done of untracking data

13. Now run above command now dvc can track it, folder can be tracked either by git or dvc
14. run "dvc add data/" #now dvc can track it

15. To track these files using Git, as we have to commit all files and id-generated by DVC and helps to save versions of data
#keep track of different versions of data
16. run this: git add .gitignore data.dvc
#will save the md5 i.e. id generated by dvc for each version of data

17. Perform dvc status, dvc commit and dvc push
When dvc push is performed Inside S3 version of data will be stored which contains now
S3 will contain two files for each of the data version, 
a)file with md5 i.e. id for data-version
b) file with data-version itself (data)

18. Do git add commit and push to mark this as first version of data